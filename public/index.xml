<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ayoub's Blog</title><link>https://ayoubmah.github.io/</link><description>Recent content on Ayoub's Blog</description><generator>Hugo</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener"&gt;CC BY-NC 4.0&lt;/a&gt;</copyright><lastBuildDate>Tue, 14 Oct 2025 01:15:28 +0200</lastBuildDate><atom:link href="https://ayoubmah.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Collection Interfece</title><link>https://ayoubmah.github.io/posts/collection-interface/</link><pubDate>Tue, 14 Oct 2025 01:15:28 +0200</pubDate><guid>https://ayoubmah.github.io/posts/collection-interface/</guid><description>&lt;p&gt;the collection interface extends Iterable interface from java.lang
we have a method
&lt;strong&gt;boolean add(E e)&lt;/strong&gt; that return true if the collection changed (the elem e added) and false if not
&lt;strong&gt;boolean addAdd(Collection &amp;lt; ? extends E&amp;gt; c)&lt;/strong&gt; , that take a collection of type E of subtype of E and return true if the collection changed (all elm added)&lt;/p&gt;
&lt;p&gt;So if you have a &lt;code&gt;Collection&amp;lt;Animal&amp;gt;&lt;/code&gt; and another &lt;code&gt;Collection&amp;lt;Dog&amp;gt;&lt;/code&gt;,&lt;br&gt;
you can add the &lt;code&gt;Dog&lt;/code&gt;s into the &lt;code&gt;Animal&lt;/code&gt; collection because &lt;code&gt;Dog&lt;/code&gt; &lt;strong&gt;extends&lt;/strong&gt; &lt;code&gt;Animal&lt;/code&gt;.&lt;/p&gt;</description></item><item><title>Create My Own JCF-week1</title><link>https://ayoubmah.github.io/posts/create-my-own-jcf-week1/</link><pubDate>Sat, 11 Oct 2025 00:59:35 +0200</pubDate><guid>https://ayoubmah.github.io/posts/create-my-own-jcf-week1/</guid><description>&lt;h3 id="jcf-java-collection-framework-hierarchy"&gt;JCF: Java Collection Framework Hierarchy&lt;/h3&gt;
&lt;p&gt;&lt;img src="https://ayoubmah.github.io/images/Pasted%20image%2020251014010626.png" alt="Pasted image 20251014010626"&gt;&lt;/p&gt;
&lt;p&gt;_Bfore starting implementing JCF should you know the Iterable&lt;!-- raw HTML omitted --&gt; interface&lt;/p&gt;
&lt;h1 id="1-iterable"&gt;1. Iterable&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Iterable interface is a builtin interface in java it allow us using &amp;ldquo;for-each&amp;rdquo; loop thanks to Iterator method&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;let&amp;rsquo;s take an example
if you work with arrays in java and suppose you create an new array&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;int&lt;/span&gt;&lt;span style="color:#f92672"&gt;[]&lt;/span&gt; arr &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;new&lt;/span&gt; Interger&lt;span style="color:#f92672"&gt;[]&lt;/span&gt;{1,2,3}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and you want to make the forEach loop like this &lt;code&gt;for(int n : arr)&lt;/code&gt; =&amp;gt; this will give you a compiler error&lt;/p&gt;</description></item><item><title>MicroServices With Go and kuber</title><link>https://ayoubmah.github.io/posts/microservices-with-go-and-kuber/</link><pubDate>Wed, 08 Oct 2025 08:45:00 +0200</pubDate><guid>https://ayoubmah.github.io/posts/microservices-with-go-and-kuber/</guid><description>&lt;p&gt;coming soon :)&lt;/p&gt;</description></item><item><title/><link>https://ayoubmah.github.io/ilt/2025/09/20/</link><pubDate>Sat, 20 Sep 2025 22:29:42 +0200</pubDate><guid>https://ayoubmah.github.io/ilt/2025/09/20/</guid><description/></item><item><title>The OS Manages The Hardware</title><link>https://ayoubmah.github.io/ilt/2025/09/17/the-os-manages-the-hardware/</link><pubDate>Wed, 17 Sep 2025 17:09:33 +0200</pubDate><guid>https://ayoubmah.github.io/ilt/2025/09/17/the-os-manages-the-hardware/</guid><description>&lt;h2 id="1-layered-view-of-a-computer-system"&gt;1) Layered view of a computer system&lt;/h2&gt;
&lt;p&gt;the os is a piece of software that is setting between the applications programs and the hardware&lt;/p&gt;
&lt;p&gt;&lt;img src="https://ayoubmah.github.io/images/Pasted%20image%2020250917173342.png" alt="Pasted image 20250917173342"&gt;&lt;/p&gt;
&lt;p&gt;the role of the os is&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Protect the hardware from misuse by runaway the applications&lt;/li&gt;
&lt;li&gt;provide application with simple and uniform mechanisms&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="2-abstractions-provided-by-an-operating-system"&gt;2) Abstractions provided by an operating system&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;files&lt;/strong&gt; are abstraction for I/O devices
&lt;strong&gt;virtual memory&lt;/strong&gt; is an abstraction for the main memory + I/O devices
&lt;strong&gt;Processes&lt;/strong&gt; are abstraction for processor + main memory + I/O devices&lt;/p&gt;</description></item><item><title>Doubly Linked Lists</title><link>https://ayoubmah.github.io/ilt/2025/09/08/doubly-linked-lists/</link><pubDate>Mon, 08 Sep 2025 23:23:40 +0200</pubDate><guid>https://ayoubmah.github.io/ilt/2025/09/08/doubly-linked-lists/</guid><description>&lt;p&gt;In this blog we&amp;rsquo;ll see how we can implementing a doubly linked list
if you havenâ€™t seen the Singly Linked List yet it&amp;rsquo;s better to check it &lt;a href="https://ayoubmah.github.io/ilt/2025/08/12/singly-linked-list/"&gt;here&lt;/a&gt; first, because the concept is almost the same with just a few changes.&lt;/p&gt;
&lt;p&gt;the main difference is in the node itself
this time a node referenced by the &lt;strong&gt;next&lt;/strong&gt; node and the &lt;strong&gt;prev&lt;/strong&gt; node
as you can see in this image&lt;/p&gt;
&lt;p&gt;&lt;img src="https://ayoubmah.github.io/images/dob.jpeg" alt="dob"&gt;&lt;/p&gt;
&lt;p&gt;let&amp;rsquo;s implemented in java&lt;/p&gt;</description></item><item><title>Leet-Code-Day001</title><link>https://ayoubmah.github.io/ilt/2025/09/04/leet-code-day001/</link><pubDate>Thu, 04 Sep 2025 23:34:00 +0200</pubDate><guid>https://ayoubmah.github.io/ilt/2025/09/04/leet-code-day001/</guid><description>&lt;p&gt;you can see the problem here
&lt;a href="https://leetcode.com/problems/merge-two-sorted-lists/"&gt;Merge Two Sorted Lists&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The idea is that we have &lt;strong&gt;two sorted singly linked lists&lt;/strong&gt;
and we want &lt;strong&gt;a single merged linked list containing all the elements from the two original lists in sorted order&lt;/strong&gt; like this:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://ayoubmah.github.io/images/WhatsApp%20Image%202025-09-04%20at%2011.50.26%20PM.jpeg" alt="WhatsApp Image 2025-09-04 at 11.50.26 PM"&gt;&lt;/p&gt;
&lt;p&gt;before looking at the steps of the solution, let&amp;rsquo;s see the implementation of the singly linked list with int value (you can see the generic version here &lt;a href="https://ayoubmah.github.io/ilt/2025/08/12/singly-linked-list/"&gt;Singularly Linked List&lt;/a&gt; )&lt;/p&gt;</description></item><item><title>Circularly Linked List</title><link>https://ayoubmah.github.io/ilt/2025/09/04/circularly-linked-list/</link><pubDate>Thu, 04 Sep 2025 00:02:05 +0200</pubDate><guid>https://ayoubmah.github.io/ilt/2025/09/04/circularly-linked-list/</guid><description>&lt;p&gt;Before to read about circularly linked lists i suggest to go to read bit about &lt;a href="https://ayoubmah.github.io/ilt/2025/08/12/singly-linked-list/"&gt;Singly Linked List&lt;/a&gt;, to better understanding circularly linked lists(CLL)&lt;/p&gt;
&lt;p&gt;so basically a CLL is a Singly linked list and instead of the its tail (last node of the list) point on null its point of the first element of the list (head). like this&lt;/p&gt;
&lt;p&gt;&lt;img src="https://ayoubmah.github.io/images/Pasted%20image%2020250904001212.png" alt="Pasted image 20250904001212"&gt;&lt;/p&gt;</description></item><item><title>Singly Linked List</title><link>https://ayoubmah.github.io/ilt/2025/08/12/singly-linked-list/</link><pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate><guid>https://ayoubmah.github.io/ilt/2025/08/12/singly-linked-list/</guid><description>&lt;p&gt;Before you read this if you want a deep dive on Singly LinkedList and DSA with java in general please read the &amp;ldquo;Chapter 3. Fundamental Data Structures&amp;rdquo; p.122 by MICHEAL T.GOODRICH&lt;/p&gt;
&lt;h1 id="1-node"&gt;1. Node&lt;/h1&gt;
&lt;p&gt;First let&amp;rsquo;s define a node, so a node it&amp;rsquo;s a data structure that can store an object and point to another node&lt;/p&gt;
&lt;p&gt;like this
&lt;img src="https://ayoubmah.github.io/images/Pasted%20image%2020250812133629.png" alt="Pasted image 20250812133629"&gt;&lt;/p&gt;
&lt;p&gt;we can define it in java like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;class&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;Node&lt;/span&gt;&lt;span style="color:#f92672"&gt;&amp;lt;&lt;/span&gt;E&lt;span style="color:#f92672"&gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;private&lt;/span&gt; E data;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;private&lt;/span&gt; Node&lt;span style="color:#f92672"&gt;&amp;lt;&lt;/span&gt;E&lt;span style="color:#f92672"&gt;&amp;gt;&lt;/span&gt; next;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;Node&lt;/span&gt;(E data){
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;this&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;data&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; data;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;this&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;next&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;null&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; E &lt;span style="color:#a6e22e"&gt;getData&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; data;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;void&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;setData&lt;/span&gt;(E data) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;this&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;data&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; data;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; Node&lt;span style="color:#f92672"&gt;&amp;lt;&lt;/span&gt;E&lt;span style="color:#f92672"&gt;&amp;gt;&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;getNext&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; next;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;void&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;setNext&lt;/span&gt;(Node&lt;span style="color:#f92672"&gt;&amp;lt;&lt;/span&gt;E&lt;span style="color:#f92672"&gt;&amp;gt;&lt;/span&gt; next) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;this&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;next&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; next;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;public&lt;/span&gt; String &lt;span style="color:#a6e22e"&gt;toString&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;(&amp;#34;&lt;/span&gt;&lt;span style="color:#f92672"&gt;+&lt;/span&gt;data&lt;span style="color:#f92672"&gt;+&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;) =&amp;gt;(null)&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you can see in the code, the constructor of the Node initializes theÂ nextÂ pointer toÂ null, which is what we want.&lt;/p&gt;</description></item><item><title>Obsidian + Hugo + GitHub Pages Blog Setup Guide</title><link>https://ayoubmah.github.io/postes/obsidian-+-hugo-+-github-pages-blog-setup-guide/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>https://ayoubmah.github.io/postes/obsidian-+-hugo-+-github-pages-blog-setup-guide/</guid><description>&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;This setup creates an automated blog workflow where you write in Obsidian, push to GitHub, and GitHub Actions automatically builds and deploys your Hugo site.&lt;/p&gt;
&lt;h2 id="phase-1-local-setup"&gt;Phase 1: Local Setup&lt;/h2&gt;
&lt;h3 id="step-1-install-required-tools"&gt;Step 1: Install Required Tools&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Hugo&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Windows (using Chocolatey)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;choco install hugo-extended
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# macOS (using Homebrew)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew install hugo
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Linux (using Snap)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo snap install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Git&lt;/strong&gt; (if not already installed)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download from &lt;a href="https://git-scm.com/"&gt;git-scm.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Obsidian&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>Obsidian + Hugo + GitHub Pages Blog Setup Guide</title><link>https://ayoubmah.github.io/posts/obsidian-+-hugo-+-github-pages-blog-setup-guide/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>https://ayoubmah.github.io/posts/obsidian-+-hugo-+-github-pages-blog-setup-guide/</guid><description>&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;This setup creates an automated blog workflow where you write in Obsidian, push to GitHub, and GitHub Actions automatically builds and deploys your Hugo site.&lt;/p&gt;
&lt;h2 id="phase-1-local-setup"&gt;Phase 1: Local Setup&lt;/h2&gt;
&lt;h3 id="step-1-install-required-tools"&gt;Step 1: Install Required Tools&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Hugo&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Windows (using Chocolatey)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;choco install hugo-extended
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# macOS (using Homebrew)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew install hugo
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Linux (using Snap)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo snap install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Git&lt;/strong&gt; (if not already installed)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download from &lt;a href="https://git-scm.com/"&gt;git-scm.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Obsidian&lt;/strong&gt;&lt;/p&gt;</description></item><item><title/><link>https://ayoubmah.github.io/postes/free-ps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ayoubmah.github.io/postes/free-ps/</guid><description>&lt;p&gt;hello&lt;/p&gt;
&lt;p&gt;this is the image of kobat sakhra in al kodss
![[totoro-minimalist-3840x2160-20906.png]]&lt;/p&gt;
&lt;p&gt;![[pexels-faheem-ahamad-422934800-16732791.jpg]]&lt;/p&gt;
&lt;p&gt;![[sasuke-uchiha-3840x2160-12165.jpg]]&lt;/p&gt;</description></item></channel></rss>